{"version":3,"sources":["effect.js"],"names":["document","addEventListener","window","setTimeout","querySelector","classList","add","dateCompile","Date","today","console","nowDate","toLocaleDateString","hasClass","visualPage","contains","log","viewChange","remove","box_eventTime","e","bonuce_animate","now_scroll","moveBox","box_fixedHeight","pin_height","pin_result","header_removeClass","openEffect","offsetHeight"],"mappings":"aAQAA,SAASC,iBAAiB,mBAAqB,WAC3CC,OAAOC,WAAY,WACfH,SAASI,cAAc,YAAYC,UAAcC,IAAA,YAQzD,IAAMC,QAAWC,KAAGC,MACpBC,MAAYH,IAAAA,KAAZI,SADMJ,YAAcE,MAAMG,qBAStB,SAAMC,aAHN,IAKIA,EAAUb,SAAAI,cAAA,YACVU,EAAWT,SAAcD,cAAzB,eACAM,EAAYG,EAAZR,UAAAU,SAAA,QAGAD,GACHA,EAAAT,UAAAC,IAAA,UACJI,QAAAM,IAAAH,IAGGI,EAAUZ,UAAAa,OAAA,UAaNhB,SAAAA,cACIF,SAAAA,cAASI,aAAcC,UAAiBA,OAAUC,YAKzD,SAPDa,gBAQHnB,SAAAC,iBAAA,mBAAA,SAAAmB,GAPOlB,OAAOC,WAAY,WAS3BgB,SAEIf,cAAA,iBAAAC,UAAAC,IAAA,YATQJ,OAAOC,WAAY,WAUtBkB,SAATjB,cAKA,iBAAAC,UAAAa,OAAA,aAEA,MACA,OAQA,SAAAG,kBA6BI,SAAIC,aAlBJ,IAAMC,EAAUvB,SAASI,cAAc,iBAqBvCmB,EAAMC,iBAAkBxB,YAASI,SAAAA,GAnB7BM,QAAQM,IAAI,KAsBZS,EAAUpB,UAAGL,IAASI,cAE1BmB,EAAIG,iBAAuB,aAG3B,SAAAN,GAvBIV,QAAQM,IAAI,KAwBhBU,EAAaJ,UAAbJ,OAA0BS,cAlG9BjB,QAAAM,IAASC,aAsBLjB,OAAAA,iBAAA,OAAuB,WAI3BiB,eA2BAE,gBAiDKnB,SAAAC,iBAAA,mBAAA2B,YAGA5B,SAAAC,iBAAA,SAAA,SAAAmB,GAEDV,IACAA,EAAYc,OAAAA,QAnBNA,EAAkBxB,SAASI,cAAc,UAAUyB,aAAe,IAGpEJ,EAAazB,SAASI,cAAc,UAAUyB,aAE9CH,EAAaD,GADDA,EAAa,GAKhBH,EAAbI,EAMI1B,SAASI,cAAc,UAAUC,UAAUa,OAAO,gBAHlDlB,SAASI,cAAc,UAAUC,UAAUC,IAAI,gBAMnDI,QAAQM,IAAIU,GACZhB,QAAQM,IAAIQ","file":"effect.min.js","sourcesContent":["// window.addEventListener('load' , () => {\r\n//     window.setTimeout( () => {\r\n//         document.querySelector('.loading').classList.add('fade') ;\r\n//     } , 1000)\r\n// })\r\n\r\n\r\n// 아래는 DOM 컨텐츠 로드되면 실행 / 위의 주석은 지정한 타임 지나면 자동 실행\r\ndocument.addEventListener('DOMContentLoaded' , () => {\r\n    window.setTimeout( ()=> {\r\n        document.querySelector('.loading').classList.add('fade')\r\n    })\r\n})\r\n\r\n\r\n// 날짜 가져오기\r\nconst nowDate = Date.now();\r\nconst today = new Date(nowDate);\r\nconst dateCompile = today.toLocaleDateString()\r\nconsole.log(dateCompile)\r\n\r\n\r\n//  로딩 페이지 클래스 감지\r\nfunction viewChange ( ) {\r\n    const isLoad = true;\r\n    const loadPage = document.querySelector('.loading')\r\n    const visualPage = document.querySelector('.after_load')\r\n    const hasClass = loadPage.classList.contains('fade')\r\n\r\n    if (hasClass) {\r\n        visualPage.classList.add('active')\r\n        console.log(hasClass)\r\n    }\r\n    else {\r\n        visualPage.classList.remove('active')\r\n    }\r\n}\r\n\r\nwindow.addEventListener('load' , () => {\r\n    viewChange()\r\n})\r\n\r\n\r\n// 햄버거 클래스 토글\r\nfunction hambAnimate () {\r\n    document.querySelector('.hambuger').classList.toggle('act_hamb')\r\n}\r\n\r\n\r\n// 하단 카테고리 박스 이벤트 + 이펙트 / 돔 컨텐츠 로드 후 2초 지나면 하단 카테고리 생성 후 다시 숨기기\r\nfunction box_eventTime () {\r\n    document.addEventListener('DOMContentLoaded' , e => {\r\n        window.setTimeout( () => {\r\n            document.querySelector('.category_box').classList.add('move_box')\r\n            window.setTimeout( () => {\r\n                document.querySelector('.category_box').classList.remove('move_box')\r\n            }, 5000)\r\n        }, 2000)\r\n    })\r\n}\r\n\r\nbox_eventTime()\r\n\r\n    //  카테고리 박스 하위 요소 애니메이션\r\nfunction bonuce_animate () {\r\n\r\n}\r\n\r\n\r\n// 비동기 처리 방식으로 바꿈. 제이쿼리 $(function()) 을 써도 되지만 자바스크립트로 처리해보고 싶었음\r\n\r\n// function openEffect ()  {\r\n//     const moveBox = document.querySelector('.category_box');\r\n//     moveBox.addEventListener('mouseover' , async (e) => {\r\n//         await doSomethingAsync();\r\n//         console.log('a')\r\n//     })\r\n// }\r\n\r\n// async function doSomethingAsync() {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(() => {\r\n//             resolve();\r\n//         }, 1000)\r\n//     });\r\n// }\r\n\r\n// openEffect()\r\n\r\n\r\nfunction openEffect () {\r\n    const moveBox = document.querySelector('.category_box');\r\n    moveBox.addEventListener('mouseover' , e => {\r\n        console.log('a')\r\n        moveBox.classList.add('open_box')\r\n    })\r\n    moveBox.addEventListener('mouseleave' , e => {\r\n        console.log('b')\r\n        moveBox.classList.remove('open_box')\r\n    })\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded' , openEffect)\r\n\r\n\r\n//  헤더 현재 스크롤 위치 이벤트\r\ndocument.addEventListener('scroll' , e => {\r\n    // 다 만들고 isFixed 이용해서 리팩토링 하기\r\n    let isFixed = false ;\r\n    let now_scroll = window.scrollY\r\n\r\n    // 하단 카테고리 박스가 어느 위치에서 나올지 위치 값\r\n    const box_fixedHeight = document.querySelector(\"header\").offsetHeight + 600;\r\n\r\n    // 헤더의 높이 값\r\n    let pin_height = document.querySelector(\"header\").offsetHeight;\r\n    let minus_ele = pin_height - 1\r\n    let pin_result = pin_height - minus_ele\r\n\r\n\r\n    // pin_height > now_scroll ? pin_height.classList.add('fixed_header') : pin_height.classList.remove('fixed_header')\r\n    pin_result > now_scroll ? header_removeClass() : header_addClass()\r\n\r\n    function header_addClass () {\r\n        document.querySelector('header').classList.add('fixed_header')\r\n    }\r\n    function header_removeClass () {\r\n        document.querySelector('header').classList.remove('fixed_header')\r\n    }\r\n\r\n    console.log(pin_result)\r\n    console.log(box_fixedHeight)\r\n})\r\n\r\n"]}